"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import environ

from typing import Dict, List

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "!dnjhp#@@#jp*x-(1zzwedy8ga1+()wfdp-ab$5(hi4j82qgbb"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = "/static/"


##############################################################################
# 設定上書きここから
##############################################################################
env = environ.Env()
_DOT_ENV = os.path.join(BASE_DIR, ".env")
if os.path.exists(_DOT_ENV):
    env.read_env(_DOT_ENV)

# media directory
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/media/"

# Internationalization
LANGUAGE_CODE = "ja"
TIME_ZONE = "Asia/Tokyo"

DJANGO_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]
THIRD_PARTY_APPS: list = []

# Database
if "DATABASE_URL" in os.environ:
    # read os.environ['DATABASE_URL']
    DATABASES = {"default": env.db()}
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
        }
    }
DATABASES["default"]["ATOMIC_REQUESTS"] = True  # type: ignore

# django-storages
# https://django-storages.readthedocs.io/en/latest/
if env("DJANGO_STORAGE", default="") == "s3":
    THIRD_PARTY_APPS += ["storages"]

    AWS_ACCESS_KEY_ID = env("DJANGO_AWS_ACCESS_KEY_ID")
    AWS_SECRET_ACCESS_KEY = env("DJANGO_AWS_SECRET_ACCESS_KEY")

    AWS_S3_REGION_NAME = env("DJANGO_AWS_S3_REGION_NAME", default=None)
    AWS_STORAGE_BUCKET_NAME = env("DJANGO_AWS_STORAGE_BUCKET_NAME")
    AWS_DEFAULT_ACL = None
    AWS_S3_CUSTOM_DOMAIN = "{}.s3.amazonaws.com".format(AWS_STORAGE_BUCKET_NAME)
    _DJANGO_S3_CACHE_MAX_AGE = 60 * 60 * 24 * 7
    AWS_S3_OBJECT_PARAMETERS = {
        "CacheControl": "max-age={}, s-maxage={}, must-revalidate".format(
            _DJANGO_S3_CACHE_MAX_AGE, _DJANGO_S3_CACHE_MAX_AGE
        )
    }

    from storages.backends.s3boto3 import S3Boto3Storage

    class StaticS3Boto3Storage(S3Boto3Storage):
        bucket_name = AWS_STORAGE_BUCKET_NAME
        location = "static"

    class MediaS3Boto3Storage(S3Boto3Storage):
        bucket_name = AWS_STORAGE_BUCKET_NAME
        location = "media"
        file_overwrite = False

    STATICFILES_STORAGE = "config.settings.StaticS3Boto3Storage"
    STATIC_URL = "https://{}.s3.amazonaws.com/static/".format(AWS_STORAGE_BUCKET_NAME)
    DEFAULT_FILE_STORAGE = "config.settings.MediaS3Boto3Storage"
    MEDIA_URL = "https://{}.s3.amazonaws.com/media/".format(AWS_STORAGE_BUCKET_NAME)

# django-cors-headers
# https://github.com/adamchainz/django-cors-headers
THIRD_PARTY_APPS += ["corsheaders"]
MIDDLEWARE.insert(
    MIDDLEWARE.index("django.middleware.common.CommonMiddleware"),
    "corsheaders.middleware.CorsMiddleware",
)
CORS_ORIGIN_WHITELIST = env.list("DJANGO_CORS_ORIGIN_WHITELIST", default=[])

# Django REST framework
THIRD_PARTY_APPS += ["rest_framework"]
REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
    "DEFAULT_THROTTLE_CLASSES": [
        "rest_framework.throttling.AnonRateThrottle",
        "rest_framework.throttling.UserRateThrottle",
    ],
    "DEFAULT_THROTTLE_RATES": {"anon": "60/min", "user": "60/min"},
    # "DEFAULT_RENDERER_CLASSES": [
    #     "djangorestframework_camel_case.render.CamelCaseJSONRenderer",
    #     "djangorestframework_camel_case.render.CamelCaseBrowsableAPIRenderer",
    # ],
    # "DEFAULT_PARSER_CLASSES": [
    #     "djangorestframework_camel_case.parser.CamelCaseFormParser",
    #     "djangorestframework_camel_case.parser.CamelCaseMultiPartParser",
    #     "djangorestframework_camel_case.parser.CamelCaseJSONParser",
    # ],
    "DATETIME_FORMAT": "%Y/%m/%d %H:%M:%S",
}


LOCAL_APPS: list = []
LOCAL_APPS += ["apps.album.apps.AlbumConfig"]

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS
